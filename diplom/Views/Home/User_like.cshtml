
<link rel="stylesheet" href="~/css/mainwindow.css" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">

@using diplom.Models.ViewModels
@model ULVM
<body>
<header class="_header" style="background: linear-gradient(to bottom right,#F9D86E,#EDC237);">
    <div class="logo">
        <a href="/Home/MainPage" class="company-name">Dairy Delights Emporium</a>
    </div>
    <div class="mogo">
        <a href="/Home/AboutUsPage"><img src="~/img/Group 84(11).png" style="height:180px;width:180px;margin-top:-5px;" /></a>
    </div>
    <div class="header-buttons">
        <button id="cartButton" class="btn cart-button" style="border: 2px solid black;">
            <i class="fas fa-shopping-basket"></i>
        </button>
        <a href="/Home/User_like" class="btn fav-button" style="border: 2px solid black;">
            <i class="fas fa-heart" style="margin-top: 75%;"></i>
        </a>
        <button class="btn user-button" style="border: 2px solid black;" type="button" id="openAuthModalButton">
            <i class="fas fa-user"></i>
        </button>
    </div>
</header>

    <div id="modaluserr" class="modal" style="overflow-y:hidden">
        <!-- Модальный контент -->
        <div class="modal-content4" style="height:700px; border: 3px solid black;border-radius: 25px;">
            <span class="close" style="margin-top:-5px">&times;</span>
            <center>
                <h5 class="modal-title" style="margin-top:-5px">
                    Личный кабинет
                </h5>
            </center>
            <hr style="color: black;background: black;border: black;height: 1px;">
            <div style="display:flex;width:100%;height:100%;gap:250px">
                <div>
                    <div id="myTabsuser" style="gap:20px;width: 207px;">
                        <div style="display:flex;gap:10px;cursor: pointer;caret-color: transparent" data-tab="tab-information">
                            <i class="fas fa-home"></i>
                            <div>Личная информация</div>
                        </div>
                        <div style="display:flex;gap:10px;cursor: pointer;caret-color: transparent" data-tab="tab-password">
                            <i class="fas fa-lock"></i>
                            <div>Безопасность</div>
                        </div>
                        <div style="display:flex;gap:10px;cursor: pointer;caret-color: transparent" data-tab="tab-history">
                            <i class="fas fa-history"></i>
                            <a href="/Home/UserOrders" style="color:black">История покупок</a>
                        </div>
                        <div style="display:flex;gap:10px;cursor: pointer;caret-color: transparent" data-tab="tab-history">
                            <center>
                                <button id="logoutButton"> Выход</button>
                            </center>
                        </div>
                    </div>
                </div>
                <div>

                    <div style="width:100%;gap:50px;display:inline-grid;margin-top:40px">

                        <!-- Содержимое вкладки "Личная информация" -->
                        <div id="tab-information" class="tab-content">
                            @* <form id="userForm"> *@

                            <center style="padding:1%;margin-top:9%;margin-bottom: 15%;margin-left: 7%;">
                                <div class="userimg" style="height: 150px; width: 150px;">

                                    <p id="nameuserphoto" style="margin-top:66px">Абоба</p>

                                </div>
                            </center>
                            <div style="display:inline-grid;gap:20px;margin-left: 11%;">
                                @Html.TextBox("Emailuser", "", new { placeholder = "Email",@class ="userinf" })
                                <p id="phoneMail10" style="z-index:100;color:red;margin-top: 2.2%;;display:none;position:absolute">Пользвоатель с такой почтой уже существует</p>
                                <p id="phoneMailMessage20" style="z-index:1;color:red;margin-top: 2.2%;display:none;position:absolute">Неверный формат почты</p>
                                @Html.TextBox("Nameuser", "", new { placeholder = "Ваше имя",@class ="userinf" })
                                @Html.TextBox("lastNameuser", "", new { placeholder = "Ваша фамилия",@class ="userinf" })

                                <div style="display:flex;gap:10px;margin-left:auto;margin-right:auto" class="userinf">
                                    @* <p style="margin-left:-30px">+7</p> *@
                                    @* <input type="text" id="phoneRegister" maxlength="10" placeholder="Номер телефона"> *@
                                    <div style="display:block">
                                        @Html.TextBox("phoneRegisteruser", "", new { placeholder = "Номер телефона",@class ="numberrr"})
                                        <p id="phoneErrorMessage10" style="z-index:1;color:red;margin-top: 1%;display:none;width: 118%;">Пользвоатель с таким номером телефона уже существует</p>
                                        <p id="phoneErrorMessage20" style="z-index:1;color:red;margin-top: 1%;display:none;width: 118%">Неверный формат номера телефона</p>
                                    </div>
                                </div>
                            </div>
                            <p id="errorMessage5" style="color:red;z-index:1;display:none">⚠️ Не все поля заполнены</p>
                            @* </form> *@
                            <center style="margin-top: 14%;caret-color: transparent">
                                <button id="savebutton" type="button" style="display:flex;justify-content:center;border: 1px solid black;border-radius: 15px;gap:10px;width:100px">
                                    <center style="">
                                        <i class="fas fa-check" style="font-size:20pt;margin-top: 6px;"></i>
                                        <p style="margin-top:4px">Сохранить</p>
                                    </center>
                                </button>
                            </center>
                        </div>
                        <!-- Содержимое вкладки "Безопасность" -->
                        <div id="tab-password" class="tab-content" style="display:none;margin-top:85%;">
                            <!-- Ваше содержимое здесь -->

                            <div style="display:flex; margin-bottom: 20px;">
                                <input class="userinf" id="passwordregistersend" type="password" placeholder="Введите старый пароль">
                                <button id="showPasswordButton4" type="button" style="z-index: 1;background-color: transparent;color: black;margin-left: -60px;font-size: 20pt;margin-top: -3px;border:transparent">
                                    &#128065;
                                </button>
                            </div>
                            <p id="errorMessagepastab1" style="color:red;z-index:1;display:none;position:absolute;margin-top: -1%;margin-left: 1.2%;">Проверьте пароль</p>
                            <div style="display:flex; margin-bottom: 20px;">
                                <input class="userinf" id="passwordregisterveryf" type="password" placeholder="Новый пароль">
                                <button id="showPasswordButton5" type="button" style="z-index: 1;background-color: transparent;color: black;margin-left: -60px;font-size: 20pt;margin-top: -3px;border:transparent">
                                    &#128065;
                                </button>
                            </div>
                            <div style="display:flex; margin-bottom: 20px;">
                                <input class="userinf" id="passwordregisteveryf2r" type="password" placeholder="Повторите новый пароль">
                                <button id="showPasswordButton6" type="button" style="z-index: 1;background-color: transparent;color: black;margin-left: -60px;font-size: 20pt;margin-top: -3px;border:transparent">
                                    &#128065;
                                </button>
                            </div>
                            <p id="errorMessagepastab" style="color:red;z-index:1;display:none;margin-left: 10.2%">Пароли не совпадают</p>
                            <p id="errorMessage6" style="color:red;z-index:1;display:none;margin-left: 10.2%;">⚠️ Не все поля заполнены</p>
                            <center style="margin-top: 14%;">
                                <button id="savebuttonpas" type="button" style="display:flex;justify-content:center;border: 1px solid black;border-radius: 15px;gap:10px;width:100px">
                                    <center style="">
                                        <i class="fas fa-check" style="font-size:20pt;margin-top: 6px;"></i>
                                        <p style="margin-top:4px">Сохранить</p>
                                    </center>
                                </button>
                            </center>
                        </div>

                        <!-- Содержимое вкладки "История покупок" -->

                    </div>
                </div>
            </div>
        </div>
    </div>


<div class="main" style="margin-top:6%">
    <div class="container3" id="container3" style="padding-left: 2%;">
        @foreach (var userLike in Model.User_Likes)
        {
            <div class="col-sm-4">
                <div class="product-card" style="z-index:0">
                    <div class="card-thumbnail">
                        <img class="img-responsive" src="@userLike.Product.product_img" style="height:300px;width:400px">
                    </div>
                    <div class="card-content">
                            <button class="send" data-idd="@userLike.Product.IdProduct">
                                <img class="basket" src="/img/basket.png" alt="Корзина">
                                <i class="fa fa-send fa-2x"></i>
                            </button>
                        @if (@userLike.Product.product_sale > 0)
                        {
                            <!-- Покажите div, только если product_sale больше 0 -->
                            <div class="sale">-@userLike.Product.product_sale%</div>
                        }
                        <h1 class="card-title">
                            @userLike.Product.Name_product
                        </h1>
                        <h2 class="card-sub-title">
                            @userLike.Product.product_article
                        </h2>
                        <p class="description">
                            @userLike.Product.product_description_
                        </p>
                        <div style="display:flex">
                            @if (@userLike.Product.product_sale > 0)
                            {
                                <p class="price">
                                    <s>@userLike.Product.product_price руб.</s>
                                    @(Math.Round(Convert.ToDecimal(@userLike.Product.product_price - (@userLike.Product.product_price * @userLike.Product.product_sale / 100)))) руб.
                                </p>
                            }
                            else
                            {
                                <p class="price" id="price_@userLike.Product.IdProduct">Цена: @(Math.Round(Convert.ToDecimal(@userLike.Product.product_price))) руб.</p>
                            }
                            <p class="price1">за @userLike.Product.product_weight грамм </p>
                        </div>

                        <ul class="list-inline post-meta">
                            <li class="time-stamp">
                                <i class="fa fa-clock-o"></i> Массовая доля жира: @userLike.Product.product_mass_per_fat%
                            </li>
                            <li class="time-stamp">
                                <i class="fa fa-clock-o"></i> Энергетическая ценность: @userLike.Product.product_fatty кДж.
                            </li>
                        </ul>
                        <button class="info-button1" data-toggle="modal" data-target="#exampleModal" title="Подробнее"
                                
                                    data-idproduct="@userLike.Product.IdProduct"
                                
                                data-price="@userLike.Product.product_price"
                                data-weight="@userLike.Product.product_weight"
                                data-mass_per_fat="@userLike.Product.product_mass_per_fat"
                                data-fat="@userLike.Product.product_fat"
                                data-protein="@userLike.Product.product_protein"
                                data-fatty="@userLike.Product.product_fatty"
                                data-carb="@userLike.Product.product_carb"
                                data-energy_value="@userLike.Product.product_energy_value"
                                data-storage_life="@userLike.Product.product_storage_life"
                                data-package_id="@userLike.Product.product_package_id"
                                data-storage_conditions="@userLike.Product.product_storage_conditions"
                                data-sale="@userLike.Product.product_sale"
                                data-remain="@userLike.Product.product_remain"
                                data-article="@userLike.Product.product_article"
                                data-sostav="@userLike.Product.product_sostav"
                                data-img="@userLike.Product.product_img"
                                data-provider_id="@userLike.Product.Provider_id"
                                data-package_name="">
                            <i class="fa fa-question"></i>
                        </button>
                            <button class="fav-button1" id="mybut" title="Удалить из избранного" data-idproduct="@userLike.Product.IdProduct">
                            <i class="fas fa-heart-broken"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="">
        <div class="modal-dialog">
            <div class="modal-content2">
                <div class="modal-header" style="font-family: 'Dancing Script', cursive;font-weight:bold;font-size:20px">
                    <h5 class="modal-title" id="exampleModalLabel" style="margin-top:-5px">
                        Информация о товаре
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="background-color: transparent;border: none;margin-top:-55px">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row" style="margin-top:-15px;">
                        <div class="col-sm-3 tovarimg"></div>
                        <div class="col-sm-9 tovarinfo"></div>
                    </div>
                    <hr style="color: black;background: black;border: black;height: 1px;">
                    <form class="formmy">
                        <div class="form-groupimg">
                            <img id="productImage" class="img-responsive" style="width:580px;height:420px;" />
                        </div>
                        <div class="sale1"></div>

                        <div style="display:block;padding-left:20px;grid-column:2;grid-row:1">
                            <div class="ihih">
                                <div class="form-groupdesc">
                                    <center><label id="productNameLabel" for="exampleFormControlInput1"></label></center>
                                </div>

                                <div class="aboba">
                                    <div class="form-groupprice">
                                        <center><label id="productNameLabel" for="exampleFormControlInput1"></label></center>
                                        <p id="description" class="form-control" readonly>
                                            <div style="display:flex;gap:20px;margin-top:-25px">
                                                <P>Цена:</P>
                                                <p id="productPrice" class="form-control" readonly></p>
                                                <p id="productWeight" class="form-control" readonly></p>
                                            </div>
                                        <p id="productSostav" style="margin-top:-10px" class="form-control" readonly></p>
                                        <p id="productArticle" class="form-control" readonly></p>
                                        <div style="display:block;gap:10px">
                                                @* для поставщика и упаковки  *@
                                            <p id="productSupplier"> </p>
                                            <p id="productpa"></p>
                                            <p id="productrate"></p>
                                                @* <div id="rating-stars"></div> *@

                                        </div>
                                    </div>

                                </div>

                                <div class="gf" style="display:flex">
                                    <button class="send btn cart-button" id="senddd">
                                        <img class="basket" src="/img/basket.png" alt="Корзина">
                                        <i class="fa fa-send fa-2x"></i>
                                    </button>
                                    <button class="fav-button2" id="cardfav" style="border: 2px solid black;grid-row:1;grid-column:2;margin-left:20px;width: 60px;height: 60px;">
                                        <i class="fas fa-heart"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div id="myTabs">
                            <div class="tab" data-tab="tab-info">Подробная информация</div>
                            <div class="tab" data-tab="tab-reviews">Отзывы</div>
                        </div>
                        <div id="myTabsContent">
                            <div class="tab-content" id="tab-info-content" style="height:260px;margin-top:60px">
                                <div class="gav">
                                    <div style="margin-top:30px">
                                        <div class="form-groupart">
                                            <p id="productMassPerFat" class="form-control" readonly></p>
                                            <p id="productfat" class="form-control" readonly></p>
                                        </div>
                                        <div class="form-groupfat" style="display:flex;gap:5px;margin-top:-20px">
                                            <p>Пищевая ценность: </p>
                                            <p id="productProtein" class="form-control" readonly></p>
                                            <p id="productFatty" class="form-control" readonly></p>
                                            <p id="productCarb" class="form-control" readonly></p>
                                            <p>на 100 гр.</p>
                                        </div>
                                        <div class="form-groupfat" style="margin-top:-20px">
                                            <p id="productEnergyValue" class="form-control" readonly></p>
                                            <p id="productStorageLife" class="form-control" readonly></p>
                                            <p id="productStorageConditions" class="form-control" readonly></p>
                                        </div>
                                    </div>


                                </div>
                            </div>
                            <div class="tab-content pagination" style="display:flex!important;gap:70px;overflow-y: auto;" id="tab-reviews-content">
                                <!-- Ваши отзывы и элементы для пагинации здесь -->
                                <div id="ratingcont" style="display:flex;gap:40px;width:100%">
                                    <div class="ratesss">
                                        <center>
                                            <p id="productrate2" style=" align-self: center;font-size: 25px;margin-top: 30px;"></p>

                                        </center>
                                        <center>
                                            <p style="grid-row:2;margin-top:-1px;font-size: 20px;font-weight:bold;">Общий рейтинг</p>
                                        </center>
                                    </div>
                                    <div class="ratesss2">
                                        <div class="taiting-starsss">
                                            <p style="margin-top: 9px;margin-left:20px">Класс</p>
                                            <p style="color: #FFD700;font-size: 25px;"> &#9733;&#9733;&#9733;&#9733;&#9733;</p>
                                            <div style="display:flex">
                                                <p id="five" style="grid-column:3;margin-top:12px;z-index:1;margin-left:10px">апапав</p>
                                                <div class="progress-container" style="grid-column:3">
                                                    <div class="progress-bar" id="progress-bar"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="taiting-starsss">
                                            <p style="margin-top: 9px;margin-left:20px">Хорошо</p>
                                            <p style="color: #FFD700;font-size: 25px;"> &#9733;&#9733;&#9733;&#9733;</p>
                                            <p style="color: white;font-size: 25px;grid-column:2;margin-top: -65px;margin-left: 84px;">&#9734;</p>
                                            <div style="display:flex">
                                                <p id="four" style="grid-column:3;z-index: 1;margin-top: -53px; margin-left: 10px;">gfdfgdfgfd</p>
                                                <div class="progress-container" style="grid-column:3;margin-top: -55px;margin-left: -20px;">
                                                    <div class="progress-bar" id="progress-bar1"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="taiting-starsss" style="margin-top: -30px;">
                                            <p style="margin-top: 9px;margin-left:20px;">Приемлемо</p>
                                            <p style="color: #FFD700;font-size: 25px;"> &#9733;&#9733;&#9733;</p>
                                            <p style="color: white;font-size: 25px;grid-column:2;margin-top: -65px;margin-left: 63px;">&#9734;&#9734;</p>
                                            <div style="display:flex">
                                                <p id="three" style="grid-column:3;margin-top:-53px;z-index:1;margin-left: 10px;">gfdfgdfgfd</p>
                                                <div class="progress-container" style="grid-column:3;margin-top: -55px;margin-left: -20px;">
                                                    <div class="progress-bar" id="progress-bar2"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="taiting-starsss" style="margin-top: -30px;">
                                            <center><p style="margin-top: 9px;margin-left:20px;">Плохо</p></center>
                                            <p style="color: #FFD700;font-size: 25px;"> &#9733;&#9733;</p>
                                            <p style="color: white;font-size: 25px;grid-column:2;margin-top: -64px;margin-left: 40px;">&#9734;&#9734;&#9734;</p>
                                            <div style="display:flex">
                                                <p id="two" style="grid-column:3;margin-top:-53px;z-index:1;margin-left: 10px;">gfdfgdfgfd</p>
                                                <div class="progress-container" style="grid-column:3;margin-top: -55px;margin-left: -20px;">
                                                    <div class="progress-bar" id="progress-bar3"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="taiting-starsss" style="margin-top: -30px;">
                                            <p style="margin-top: 9px;margin-left:20px">Ужасно</p>
                                            <p style="color: #FFD700;font-size: 25px;"> &#9733</p>
                                            <p style="color: white;font-size: 25px;grid-column:2;margin-top: -65px; margin-left: 20px;">&#9734;&#9734;&#9734;&#9734;</p>
                                            <div style="display:flex">
                                                <p id="one" style="grid-column:3;margin-top:-53px;z-index:1;margin-left: 10px;">gfdfgdfgfd</p>
                                                <div class="progress-container" style="grid-column:3;margin-top: -55px;margin-left: -20px;">
                                                    <div class="progress-bar" id="progress-bar4"></div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div id="rewey" style=" margin-top: 250px;margin-left: -1100px;width:97%;">
                                    </div>

                                </div>


                            </div>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <div class="container4">
        <footer class="footer">
            <div class="footer-left col-md-4 col-sm-6">
                <p class="about">
                    <span> О нашей компании</span> "Dairy Delights Emporium - это гурманский рай для любителей сыра. С особой страстью к мастерству и качеству, мы предлагаем эксклюзивный ассортимент сыров, от классических французских бри и камамберов до редких и экзотических вариаций со всего мира. Наша миссия — дарить неповторимый вкус и наслаждение каждому клиенту, подбирая идеальные сыры для их стола, будь то повседневный ужин или особый праздничный приём. В Cheese Delight вы найдете сыр, который удовлетворит ваш гурманский вкус и превратит каждое блюдо в произведение искусства."
                </p>
                <div class="icons">
                    <a href="#"><i class="fa-brands fa-facebook"></i></a>
                    <a href="#"><i class="fa-brands fa-vk"></i></a>
                    <a href="#"><i class="fa-brands fa-instagram"></i></a>
                </div>
            </div>
            <div class="footer-center col-md-4 col-sm-6">
                <div>
                    <i class="fa fa-map-marker"></i>
                    <p><span> Наш адресс</span> Смоляной переулок,2</p>
                </div>
                <div>
                    <i class="fa fa-phone"></i>
                    <p> +7 9881 761 084</p> |
                    <p> Ежедневно с 8 до 20</p>
                </div>
                <div>
                    <i class="fa fa-envelope"></i>
                    <p><a href="#"> DairyDelightsEmporium@mail.ru</a></p>
                </div>
            </div>
            <div class="footer-right col-md-4 col-sm-6">
                <h2> Dairy Delights <span> Emporium</span></h2>
                <p class="menu">
                    <a href="#"> Каталог</a> |
                    <a href="@Url.Action("AboutUsPage", "Home")" onclick="scrollToElement('mya')"> О нас</a> |
                    <a href="@Url.Action("AboutUsPage", "Home")#contacts"> Контакты</a> |
                    <a href="#myModal1" id="modalOpen"> Политика конфиденциальности</a>
                </p>
                <p class="name"> Dairy Delights Emporium; 2004</p>
            </div>
        </footer>
    </div>
</div>
    <script>
        $(document).ready(function () {
            $('.info-button1').on('click', function () {
                var productId = $(this).data('idproduct');


                $.ajax({
                    type: "GET",
                    url: "/Home/GetProduct", // Замените на ваш реальный URL
                    data: { Id: productId },
                    success: function (Product) {
                        if (Product["product_sale"]) {
                            // Рассчитываем цену с учетом скидки и округляем до целого числа
                            var discountedPrice = Math.round((1 - Product["product_sale"] / 100) * Product["product_price"]);

                            // Обновляем значения в таблице
                            $('#productPrice').html('<del>' + Product["product_price"] + ' руб.</del> ' + discountedPrice + ' руб. за');

                            // Обновляем значение скидки в div и отображаем его, если скидка больше 0
                            $('.sale1').text('-' + Product["product_sale"] + '%');
                            $('.sale1').toggle(Product["product_sale"] > 0);
                        } else {
                            // Если скидки нет, просто обновляем цену и скрываем div
                            $('#productPrice').text(Product["product_price"] + " рублей за");
                            $('.sale1').hide();
                        }

                        $('#productNameLabel').text(Product["name_product"]);
                        /*$('#productPrice').text(Product["product_price"] + " рублей за");*/
                        $('#description').text(Product["product_description_"]);
                        $('#productImage').attr('src', '' + Product["product_img"]);
                        $('#productWeight').text(Product["product_weight"] + ' гр.');
                        $('#productMassPerFat').text('Массовая доля жира:' + Product["product_mass_per_fat"] + '%');
                        $('#productfat').text('Жирность:' + Product["product_fat"] + '%');
                        $('#productProtein').text('Белки:' + Product["product_protein"] + 'г.');
                        $('#productFatty').text('Жиры:' + Product["product_fatty"] + 'г.');
                        $('#productCarb').text('Углеводы:' + Product["product_carb"] + 'г.');
                        $('#productEnergyValue').text('Энергетическая ценность:' + Product["product_energy_value"] + 'ккал');
                        $('#productStorageLife').text('Срок хранения:' + Product["product_storage_life"] + ' дней с момента фасовки');
                        $('#productPackageId').text(Product["product_package_id"]);
                        $('#productStorageConditions').text('Условия хранения:' + Product["product_storage_conditions"]);
                        $('#productSale').text(Product["product_sale"]);
                        $('#productRemain').text(Product["product_remain"]);
                        $('#productArticle').text('Артикул:' + Product["product_article"]);
                        $('#productSostav').text('Состав:' + Product["product_sostav"]);
                        $('#prodid').text(Product["idProduct"]);
                        Product["rates"].forEach(function (comment) {
                            var initials = comment["user"]["user_name"].charAt(0) + comment["user"]["surname"].charAt(0);
                            var starsHTML = '';
                            // Определяем количество звезд в зависимости от оценки
                            var rating = parseInt(comment["_Rate"]);
                            for (var i = 0; i < rating; i++) {
                                starsHTML += '★'; // Звезда
                            }
                            for (var j = rating; j < 5; j++) {
                                starsHTML += '<span style=" font-size: 30px;">☆</span>';
                            }

                            var commentHTML = '<div style="width:97%;border: 3px solid black;margin-bottom:10px; border-radius: 10px;max-height:105px;margin-left:30px">';
                            commentHTML += '<div style="display: flex; align-items: flex-start; padding: 20px;">'; // Изменено здесь
                            commentHTML += '<div class="user-initials" style="width: 50px; height: 50px; background-color: gray; border-radius: 50%; text-align: center; line-height: 31px; color: white; font-weight: bold; margin-right: 10px;padding:10px;line-width:20px">' + initials + '</div>';
                            commentHTML += '<div style="flex-grow: 1;">';
                            commentHTML += '<p style="margin-top: -0.2%; margin-bottom: 0;font-size:20px">' + comment["user"]["user_name"] + " " + comment["user"]["surname"] + '</p>';

                            commentHTML += '<div style="display: flex; flex-direction: row;">'; // Обертка для комментария и звезд
                            if (comment["rate_comment"] !== null) {
                                commentHTML += '<p style="margin-top: 5px; margin-bottom: 0; font-size: 20px;width:850px">' + comment["rate_comment"] + '</p>';
                            }
                            commentHTML += '<p style="margin-top: -16px; margin-bottom: 0; font-size: 30px; margin-left: auto;color:#FFD700">' + starsHTML + '</p>';
                            commentHTML += '</div>';

                            commentHTML += '</div>';
                            commentHTML += '</div>';
                            commentHTML += '</div>';
                            commentHTML += '</div>';

                            $('#rewey').append(commentHTML);
                        });

                        $('#exampleModal').on('hidden.bs.modal', function (e) {
                            $('#rewey').empty(); // Очистка содержимого элемента #rewey
                        });
                        console.log(Product);
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                    }
                });


            });
        });
    </script>
    <script>
        function getPrice(card) {
            var saleElement = card.querySelector('.sale');
            var priceElement = card.querySelector('.price');

            if (saleElement && parseInt(saleElement.innerText.replace('-', '')) > 0) {
                // Если есть скидка, учитываем цену со скидкой
                return parseFloat(priceElement.innerText.split(' ')[2]);
            } else {
                // В противном случае учитываем обычную цену
                return parseFloat(priceElement.innerText.split(' ')[1]);
            }
        }
    </script>
    <script>
        $(document).ready(function () {
            $(".info-button1").on("click", function () {
                var productId = $(this).data('idproduct');
                var $productRate = $("#productrate");
                var $productRate2 = $("#productrate2");
                var $ratingStars = $("#rating-stars");

                getProductRatingById(productId)
                    .then(function (averageRate) {
                        updateProductRating($productRate, $ratingStars, averageRate);

                        // Добавьте класс для изменения цвета текста, включая звезду
                        $productRate2.html('<span class="star-rating">' + averageRate + '<span class="star">★</span></span>');

                        // Переопределите цвет только для звезды и добавьте стили
                        $productRate2.find('.star')
                            .css('color', '#FFD700')

                    })
                    .catch(function (error) {
                        console.error("Ошибка при получении рейтинга продукта:", error);
                    });
            });

            // Функция для выполнения асинхронного запроса к серверу и получения рейтинга продукта
            function getProductRatingById(productId) {
                return new Promise(function (resolve, reject) {
                    $.ajax({
                        url: '/Home/GetProductRating',
                        data: { productId: productId },
                        type: 'GET',
                        success: function (result) {
                            resolve(result);
                        },
                        error: function (error) {
                            reject(error);
                        }
                    });
                });
            }

            // Функция для обновления текста и звезд
            function updateProductRating($productRate, $ratingStars, averageRate) {
                $productRate.text("Рейтинг продукта: " + averageRate + '★');

            }
        });
    </script>

    <script>
        function getPackageNameById(packageId) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    type: "GET",
                    url: "/Home/GetPackageName", // Замените на ваш реальный URL
                    data: { packageId: packageId },
                    success: function (packageName) {
                        resolve(packageName);
                    },
                    error: function (xhr, status, error) {
                        reject(error);
                    }
                });
            });
        }

        $(document).ready(function () {
            $(".info-button1").on("click", function () {
                var packageId = $(this).data("package_id");
                var $productSup = $("#productSupplier");

                // Вызов функции с использованием Promise
                getPackageNameById(packageId)
                    .then(function (packageName) {
                        // Обновить текст в элементе <p>
                        $productSup.text("Упаковка: " + packageName);
                    })
                    .catch(function (error) {
                        console.error("Ошибка при получении имени пакета:", error);
                    });
            });
        });
    </script>

    <script>
        function getProviderNameById(providerId) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    type: "GET",
                    url: "/Home/GetProviderName", // Замените на ваш реальный URL
                    data: { providerId: providerId },
                    success: function (providerName) {
                        resolve(providerName);
                    },
                    error: function (xhr, status, error) {
                        reject(error);
                    }
                });
            });
        }

        $(document).ready(function () {
            $(".info-button1").on("click", function () {
                var providerId = $(this).data("provider_id");
                var $productPa = $("#productpa");

                // Вызов функции с использованием Promise
                getProviderNameById(providerId)
                    .then(function (providerName) {
                        // Обновить текст в элементе <p>
                        $productPa.text("Поставщик: " + providerName);
                    })
                    .catch(function (error) {
                        console.error("Ошибка при получении имени поставщика:", error);
                    });
            });
        });
    </script>

    <script>
        function scrollToElement(elementId) {
            var element = document.getElementById(elementId);
            if (element) {
                element.scrollIntoView({ behavior: 'smooth' });
            }
        }
    </script>

    <script>
        $(document).ready(function () {
            $(".info-button1").on("click", function () {
                var productId = $(this).data('idproduct');
                var $productRate = $("#productrate");
                var $productRate2 = $("#productrate2");
                var $ratingStars = $("#rating-stars");

                getProductRatingById(productId)
                    .then(function (averageRate) {
                        updateProductRating($productRate, $ratingStars, averageRate);

                        // Добавьте класс для изменения цвета текста, включая звезду
                        $productRate2.html('<span class="star-rating">' + averageRate + '<span class="star">★</span></span>');

                        // Переопределите цвет только для звезды и добавьте стили
                        $productRate2.find('.star')
                            .css('color', '#FFD700');
                    })
                    .catch(function (error) {
                        console.error("Ошибка при получении рейтинга продукта:", error);
                    });
            });

            // Функция для выполнения асинхронного запроса к серверу и получения рейтинга продукта
            function getProductRatingById(productId) {
                return new Promise(function (resolve, reject) {
                    $.ajax({
                        url: '/Home/GetProductRating',
                        data: { productId: productId },
                        type: 'GET',
                        success: function (result) {
                            resolve(result);
                        },
                        error: function (error) {
                            reject(error);
                        }
                    });
                });
            }
        });
        function updateProductRating($productRate, $ratingStars, averageRate) {
            $productRate.text("Рейтинг продукта: " + averageRate + '★');

        }
    </script>
    <script>
        $('.info-button1').on('click', function () {
            var productId = $(this).data('idproduct');

            $.ajax({
                url: '/Home/CountRatings', // Замените ControllerName на ваш фактический контроллер
                type: 'GET',
                data: { productId: productId },
                success: function (data) {
                    var count5 = data[5] || 0;
                    $('#five').text(count5);

                    var count4 = data[4] || 0;
                    $('#four').text(count4);

                    var count3 = data[3] || 0;
                    $('#three').text(count3);

                    var count2 = data[2] || 0;
                    $('#two').text(count2);

                    var count1 = data[1] || 0;
                    $('#one').text(count1);
                },
                error: function (error) {
                    console.error('Ошибка при получении количества оценок:', error);
                }
            });
        });
    </script>

    <script>
        $('.info-button1').on('click', function () {
            var productId = $(this).data('idproduct');

            $.ajax({
                url: '/Home/CountRatings', // Замените ControllerName на ваш фактический контроллер
                type: 'GET',
                data: { productId: productId },
                success: function (data) {
                    var count5 = data[5] || 0;
                    var count4 = data[4] || 0;
                    var count3 = data[3] || 0;
                    var count2 = data[2] || 0;
                    var count1 = data[1] || 0;

                    $('#five').text(count5);
                    $('#four').text(count4);
                    $('#three').text(count3);
                    $('#two').text(count2);
                    $('#one').text(count1);

                    var totalRatings = count5 + count4 + count3 + count2 + count1;

                    var percentage5 = totalRatings > 0 ? (count5 / totalRatings) * 100 : 0;
                    var percentage4 = totalRatings > 0 ? (count4 / totalRatings) * 100 : 0;
                    var percentage3 = totalRatings > 0 ? (count3 / totalRatings) * 100 : 0;
                    var percentage2 = totalRatings > 0 ? (count2 / totalRatings) * 100 : 0;
                    var percentage1 = totalRatings > 0 ? (count1 / totalRatings) * 100 : 0;

                    $('#progress-bar').css('width', percentage5 + '%');
                    $('#progress-bar1').css('width', percentage4 + '%');
                    $('#progress-bar2').css('width', percentage3 + '%');
                    $('#progress-bar3').css('width', percentage2 + '%');
                    $('#progress-bar4').css('width', percentage1 + '%');
                },
                error: function (error) {
                    console.error('Ошибка при получении количества оценок:', error);
                }
            });
        });
    </script>

    <script>
        function getPrice(card) {
            var saleElement = card.querySelector('.sale');
            var priceElement = card.querySelector('.price');

            if (saleElement && parseInt(saleElement.innerText.replace('-', '')) > 0) {
                return parseFloat(priceElement.innerText.split(' ')[2]);
            } else {
                return parseFloat(priceElement.innerText.split(' ')[1]);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const tabs = document.querySelectorAll('#myTabs .tab');
            const tabContents = document.querySelectorAll('#myTabsContent .tab-content');

            tabs.forEach(function (tab, index) {
                tab.addEventListener('click', function () {
                    tabs.forEach(function (t) {
                        t.classList.remove('active');
                    });

                    tabContents.forEach(function (content) {
                        content.classList.remove('active');
                    });

                    this.classList.add('active');
                    tabContents[index].classList.add('active');

                    if (tabContents[index].id === 'tab-info-content') {
                        document.getElementById('tab-reviews-content').style.display = 'none';
                        document.getElementById('myTabs').style.marginTop = '10px';
                    } else {
                        document.getElementById('tab-reviews-content').style.display = 'flex';
                        document.getElementById('myTabs').style.marginTop = '-185px';
                    }
                });
            });

            tabs[0].click();
        });
    </script>
    <script>
        $(document).ready(function () {
            // Функция для форматирования номера телефона
            function formatPhoneNumber(phoneNumber) {
                return '+7 (' + phoneNumber.slice(0, 3) + ') ' + phoneNumber.slice(3, 6) + '-' + phoneNumber.slice(6, 8) + '-' + phoneNumber.slice(8);
            }

            // Функция для проверки и восстановления начальных символов "+7" при изменении значения поля ввода
            $('#phoneRegisteruser').on('input', function () {
                var phoneNumber = $(this).val();
                if (!phoneNumber.startsWith('+7')) {
                    // Если номер не начинается с "+7", восстанавливаем символы "+7"
                    $(this).val('+7' + phoneNumber);
                }
            });

            // Проверяем значение в Local Storage при загрузке страницы
            var authenticationSuccess = localStorage.getItem("AuthenticationSuccess");

            if (authenticationSuccess === "1") {
                // Если AuthenticationSuccess равно 1, открываем модальное окно
                $('#openAuthModalButton').click(function () {
                    // Получение данных о пользователе
                    $.ajax({
                        url: '/Home/UserProfile', // Замените на путь к вашему методу UserProfile
                        type: 'GET',
                        success: function (data) {
                            if (data.success) {
                                // Заполнение полей формы данными о пользователе
                                $('#Emailuser').val(data.email);
                                $('#Nameuser').val(data.name);
                                $('#lastNameuser').val(data.surname);

                                // Форматируем и устанавливаем номер телефона
                                $('#phoneRegisteruser').val(formatPhoneNumber(data.phoneNumber));

                                // Вставка первой буквы имени и фамилии в элемент с идентификатором nameuserphoto
                                var initials = (data.name.charAt(0) + data.surname.charAt(0)).toUpperCase();
                                $('#nameuserphoto').text(initials);

                                // Отображение модального окна
                                $('#modaluserr').show();
                            } else {
                                // Обработка ошибки, если не удалось получить данные о пользователе
                                console.error('Ошибка при получении данных о пользователе.');
                            }
                        },
                        error: function () {
                            // Обработка ошибки AJAX-запроса
                            console.error('Ошибка при выполнении AJAX-запроса.');
                        }
                    });
                });
            }

            // Проверка наличия символов "+7" в начале номера телефона при нажатии клавиши "Backspace"
            $('#phoneRegisteruser').on('keydown', function (event) {
                var phoneNumber = $(this).val();
                if (event.which === 8 && $(this).get(0).selectionStart <= 4 && phoneNumber.startsWith('+7')) {
                    event.preventDefault();
                }
                if (event.which === 8 && $(this).get(0).selectionStart == 8 && phoneNumber.startsWith('+7 (')) {
                    event.preventDefault();
                }
                if (event.which === 8 && $(this).get(0).selectionStart == 9 && phoneNumber.startsWith('+7 (')) {
                    event.preventDefault();
                }
                if (event.which === 8 && $(this).get(0).selectionStart == 13 && phoneNumber.startsWith('+7 (')) {
                    event.preventDefault();
                }
                if (event.which === 8 && $(this).get(0).selectionStart == 16 && phoneNumber.startsWith('+7 (')) {
                    event.preventDefault();
                }
            });

            // Закрытие модального окна при клике на крестик
            $('#modaluserr .close').click(function () {
                $('#modaluserr').hide();
            });

            // Закрытие модального окна при клике вне его области
            $(window).click(function (event) {
                if (event.target == $('#modaluserr')[0]) {
                    $('#modaluserr').hide();
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#logoutButton').click(function () {
                $.ajax({
                    url: '/Home/Logout', // Замените на реальный URL вашего контроллера
                    type: 'POST', // или 'GET', в зависимости от вашего контроллера
                    success: function (response) {
                        // Успешное выполнение запроса
                        console.log(response);
                        localStorage.setItem('AuthenticationSuccess', '0');
                        window.location.href = '/'; // Перенаправление на начальную страницу проекта
                    },
                    error: function (error) {
                        // Ошибка выполнения запроса
                        console.error(error);
                    }
                });
            });
        });


    </script>
    <script>
        $(document).ready(function () {
            // Флаг, указывающий на изменение номера телефона
            var phoneChanged = false;
            // Флаг, указывающий на изменение email
            var emailChanged = false;

            // Вызываем функцию для активации или деактивации кнопки сохранения при первой загрузке модального окна
            toggleSaveButton();

            // Следим за изменениями в полях ввода email
            $("#Emailuser").on("input", function () {
                emailChanged = true; // Установка флага изменения email
                toggleSaveButton();
                checkAllFieldsFilled(); // Проверка заполнения всех полей
            });

            // Следим за изменениями в полях ввода имени и фамилии
            $("#Nameuser, #lastNameuser").on("input", function () {
                toggleSaveButton();
                checkAllFieldsFilled(); // Проверка заполнения всех полей
            });

            // Следим за изменением номера телефона
            $("#phoneRegisteruser").on("input", function () {
                phoneChanged = true;
                toggleSaveButton();
                checkAllFieldsFilled(); // Проверка заполнения всех полей
            });

            // Функция для активации или деактивации кнопки сохранения в зависимости от наличия изменений в полях
            function toggleSaveButton() {
                var email = $("#Emailuser").val();
                var name = $("#Nameuser").val();
                var lastName = $("#lastNameuser").val();
                var phone = $('#phoneRegisteruser').val().replace(/_/g, '').replace(/\s+/g, '').replace(/[()+-]/g, '').replace(/^7/, '');

                // Проверяем, есть ли в полях ввода изменения, кроме email
                var hasChanges = phoneChanged || emailChanged || name.trim() !== "" || lastName.trim() !== "";

                // Активируем или деактивируем кнопку сохранения
                $("#savebutton").prop("disabled", !hasChanges);
            }

            // Функция для проверки заполнения всех полей и отображения сообщения об ошибке при необходимости
            function checkAllFieldsFilled() {
                var email = $("#Emailuser").val();
                var name = $("#Nameuser").val();
                var lastName = $("#lastNameuser").val();
                var phone = $("#phoneRegisteruser").val();

                // Проверка наличия пустых полей
                if (email.trim() === "" || name.trim() === "" || lastName.trim() === "" || phone.trim() === "") {
                    $("#errorMessage5").show();
                } else {
                    $("#errorMessage5").hide();
                }
            }

            // Отправка данных на сервер при редактировании пользователя
            $("#savebutton").click(function () {
                var email = $("#Emailuser").val();
                var name = $("#Nameuser").val();
                var lastName = $("#lastNameuser").val();
                var phone = $('#phoneRegisteruser').val().replace(/_/g, '').replace(/\s+/g, '').replace(/[()+-]/g, '').replace(/^7/, '');

                // Показываем сообщение об ошибке
                $("#phoneErrorMessage").hide();
                $("#phoneMail10").hide();

                // Если номер телефона не изменился и не было изменений в email, отправляем данные без проверки на сервер
                if (!phoneChanged && !emailChanged) {
                    updateUser(email, name, lastName, phone);
                } else {
                    // Проверяем длину номера телефона
                    if (phone.trim() !== "") {
                        // Проверяем, изменился ли номер телефона
                        if (phoneChanged) {
                            $.ajax({
                                type: "POST",
                                url: "/Home/CheckPhoneNumber",
                                data: { phone: phone },
                                success: function (result) {
                                    if (result.exists) {
                                        $("#phoneErrorMessage10").text("Номер телефона уже используется").show();
                                    } else {
                                        // Проверяем, изменился ли email
                                        if (emailChanged) {
                                            $.ajax({
                                                type: "POST",
                                                url: "/Home/CheckEmail",
                                                data: { email: email },
                                                success: function (emailResult) {
                                                    if (emailResult.exists) {
                                                        $("#phoneMail10").text("Пользователь с таким email уже существует").show();
                                                    } else {
                                                        updateUser(email, name, lastName, phone);
                                                    }
                                                },
                                                error: function () {
                                                    // Обработка ошибки
                                                    alert("Произошла ошибка при проверке email");
                                                }
                                            });
                                        } else {
                                            updateUser(email, name, lastName, phone);
                                        }
                                    }
                                },
                                error: function () {
                                    // Обработка ошибки
                                    alert("Произошла ошибка при проверке номера телефона");
                                }
                            });
                        } else {
                            // Номер телефона не изменился, отправляем данные без проверки на сервер
                            // Проверяем, изменился ли email
                            if (emailChanged) {
                                $.ajax({
                                    type: "POST",
                                    url: "/Home/CheckEmail",
                                    data: { email: email },
                                    success: function (emailResult) {
                                        if (emailResult.exists) {
                                            $("#phoneMail10").text("Пользователь с таким email уже существует").show();
                                        } else {
                                            updateUser(email, name, lastName, phone);
                                        }
                                    },
                                    error: function () {
                                        // Обработка ошибки
                                        alert("Произошла ошибка при проверке email");
                                    }
                                });
                            } else {
                                updateUser(email, name, lastName, phone);
                            }
                        }
                    } else {
                        // Если номер телефона не указан, просто отправляем данные без проверки на сервер
                        // Проверяем, изменился ли email
                        if (emailChanged) {
                            $.ajax({
                                type: "POST",
                                url: "/Home/CheckEmail",
                                data: { email: email },
                                success: function (emailResult) {
                                    if (emailResult.exists) {
                                        $("#phoneMail10").text("Пользователь с таким email уже существует").show();
                                    } else {
                                        updateUser(email, name, lastName, phone);
                                    }
                                },
                                error: function () {
                                    // Обработка ошибки
                                    alert("Произошла ошибка при проверке email");
                                }
                            });
                        } else {
                            updateUser(email, name, lastName, phone);
                        }
                    }
                }
            });

            // Функция для обновления данных пользователя
            function updateUser(email, name, lastName, phone) {
                $.ajax({
                    type: "POST",
                    url: "/Home/SaveUser",
                    data: { email: email, name: name, lastName: lastName, phone: phone },
                    success: function (result) {
                        if (result.success) {
                            // Обработка успешного сохранения данных
                            $('#modaluserr').hide();
                        } else {
                            // Обработка ошибок при сохранении данных
                            if (result.message === "Номер телефона содержит четыре подряд нуля") {
                                $('#phoneErrorMessage20').text("Номер телефона содержит четыре подряд нуля").show();
                            } else if (result.message === "Номер телефона должен содержать не менее 10 символов") {
                                $('#phoneErrorMessage20').text("Номер телефона должен содержать не менее 10 символов").show();
                            } else if (result.message === "Номер телефона не может состоять только из нулей") {
                                $('#phoneErrorMessage20').text("Номер телефона не может состоять только из нулей").show();
                            } else if (result.message === "Номер телефона должен содержать не более 10 символов") {
                                $('#phoneErrorMessage20').text("Номер телефона должен содержать не более 10 символов").show();
                            } else if (result.message === "Некорректный адрес электронной почты") {
                                $('#phoneMailMessage20').text("Некорректный адрес электронной почты").show();
                            } else if (result.message === "Пользователь с таким email уже существует") {
                                $('#phoneMail10').text("Пользователь с таким email уже существует").show();
                            } else {
                                alert("Ошибка: " + result.message);
                            }
                        }
                    },
                    error: function () {
                        // Обработка ошибки
                        alert("Произошла ошибка при отправке данных");
                    }
                });
            }

            // Закрытие модального окна при клике на кнопку закрытия ("close")
            $('#modaluserr .close').click(function () {
                $('#modaluserr').hide();
                $("#phoneErrorMessage10").hide();
                $("#phoneErrorMessage20").hide(); // Скрыть сообщение об ошибке
                $("#phoneMailMessage20").hide(); // Скрыть сообщение о некорректном адресе электронной почты
                $("#phoneMail10").hide();
                $("#errorMessage5").hide();// Скрыть сообщение о существующем email
                $("#Emailuser, #Nameuser, #lastNameuser, #phoneRegisteruser").val(""); // Сброс значений полей ввода
                toggleSaveButton(); // Обновить состояние кнопки сохранения
                phoneChanged = false; // Сбрасываем флаг изменения номера телефона
                emailChanged = false; // Сбрасываем флаг изменения email
            });

            // Закрытие модального окна при клике вне его области
            $(window).click(function (event) {
                if (event.target == $('#modaluserr')[0]) {
                    $('#modaluserr').hide();
                    $("#phoneErrorMessage10").hide();
                    $("#phoneErrorMessage20").hide(); // Скрыть сообщение об ошибке
                    $("#phoneMailMessage20").hide(); // Скрыть сообщение о некорректном адресе электронной почты
                    $("#phoneMail10").hide();
                    $("#errorMessage5").hide();// Скрыть сообщение о существующем email
                    $("#Emailuser, #Nameuser, #lastNameuser, #phoneRegisteruser").val(""); // Сброс значений полей ввода
                    toggleSaveButton(); // Обновить состояние кнопки сохранения
                    phoneChanged = false; // Сбрасываем флаг изменения номера телефона
                    emailChanged = false; // Сбрасываем флаг изменения email
                }
            });
        });
    </script>
    <script>
        function updatePassword(oldPassword, newPassword) {
            // Отправляем AJAX-запрос на сервер
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/Home/UpdatePassword", true);
            xhr.setRequestHeader("Content-Type", "application/json");

            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Пароль успешно изменен
                        console.log("Пароль успешно изменен");

                        // Выполняем выход из системы
                        $.ajax({
                            url: '/Home/Logout',
                            type: 'POST',
                            success: function (response) {
                                // Успешное выполнение запроса
                                console.log(response);
                                localStorage.setItem('AuthenticationSuccess', '0');
                                window.location.href = '/';
                            },
                            error: function (error) {
                                // Ошибка выполнения запроса
                                console.error(error);
                                showError("Произошла ошибка при выходе из системы");
                            }
                        });
                    } else {
                        // Произошла ошибка при изменении пароля
                        console.error("Ошибка при изменении пароля");
                        showError("Проверьте пароль");
                    }
                }
            };

            var data = JSON.stringify({ oldPassword: oldPassword, newPassword: newPassword });
            xhr.send(data);
        }

        function showError(errorMessage) {
            // Показываем сообщение об ошибке на странице
            $('#errorMessagepastab1').text(errorMessage).show();
        }

        // Функция для получения и установки нового пароля
        function getAndSetNewPassword() {
            var oldPassword = document.getElementById("passwordregistersend").value;
            var newPassword = document.getElementById("passwordregisterveryf").value;
            var newPasswordConfirm = document.getElementById("passwordregisteveryf2r").value;

            // Проверяем, что значения не пустые
            if (!(oldPassword && newPassword && newPasswordConfirm)) {
                console.error("Пожалуйста, заполните все поля пароля");
                $("#errorMessage6").show();
                return;
            }

            // Проверяем, что значения нового пароля совпадают
            if (newPassword !== newPasswordConfirm) {
                console.error("Пароли не совпадают");
                $("#errorMessagepastab").show();
                return;
            }

            // Обновляем пароль
            updatePassword(oldPassword, newPassword);
        }

        // Находим кнопку "Сохранить" и назначаем обработчик события на клик
        var saveButton = document.getElementById("savebuttonpas");
        saveButton.addEventListener("click", getAndSetNewPassword);
    </script>

    <script>
        document.getElementById('showPasswordButton4').addEventListener('click', function () {
            var passwordField = document.getElementById('passwordregistersend');
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
            } else {
                passwordField.type = 'password';
            }
        });

        document.getElementById('showPasswordButton5').addEventListener('click', function () {
            var passwordField = document.getElementById('passwordregisterveryf');
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
            } else {
                passwordField.type = 'password';
            }
        });

        document.getElementById('showPasswordButton6').addEventListener('click', function () {
            var passwordField = document.getElementById('passwordregisteveryf2r');
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
            } else {
                passwordField.type = 'password';
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            $('.fav-button1').click(function () {
                // Получаем айди продукта из атрибута data-idd кнопки
                var productId = $(this).data('idproduct');

                // Отправляем запрос на удаление товара из избранного
                $.ajax({
                    type: 'POST',
                    url: '/Home/RemoveUserLike',
                    data: { productId: productId },
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            console.log('Товар успешно удален из избранного');
                            window.location.reload();
                        } else {
                            console.log('Произошла ошибка: ' + response.message);
                        }
                    },
                    error: function () {
                        console.log('Произошла ошибка при удалении товара из избранного');
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            // Добавляем обработчик события для кнопки с классом "btn user-button"
            $('#cartButton').click(function () {
                // Проверяем значение в Local Storage перед открытием модального окна
                if (localStorage.getItem("AuthenticationSuccess") === "0") {
                    $('#modal').show(); // Открываем модальное окно для входа
                } else {
                    // Если аутентификация успешна, переходим на страницу User_like
                    window.location.href = '/Home/User_basket';
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var productId; // Переменная для хранения айди продукта

            // Обработчик события клика для кнопки info-button1
            $('.info-button1').click(function () {
                // Получаем айди продукта из атрибута data-idd кнопки
                var productId = $(this).data('idproduct');
            });

            // Обработчик события клика для кнопки fav-button2
            $('#cardfav').click(function (event) {
                event.preventDefault(); // Предотвращаем стандартное действие кнопки (перенаправление)

                var authenticationSuccess = localStorage.getItem("AuthenticationSuccess");

                if (authenticationSuccess === null || authenticationSuccess === "0") {
                    $('#modal').show();
                    $('#exampleModal').css('display', 'none');  // Скрыть exampleModal
                    $('#modal').css('z-index', '1051');  // Устанавливаем z-index для modal выше
                    return;
                }

                // Проверяем, был ли установлен productId
                if (productId !== undefined) {
                    // productId был установлен, можем его использовать
                    // Проверяем наличие записи в таблице UserLike
                    $.ajax({
                        type: 'POST',
                        url: '/Home/CheckUserLike',
                        data: { productId: productId },
                        dataType: 'json',
                        success: function (data) {
                            // Получаем userId из ответа
                            var userId = data.userId;

                            if (data.exists) {
                                // Запись уже существует, не делаем ничего
                                console.log('я твой рот ебал');
                                $.ajax({
                                    type: 'POST',
                                    url: '/Home/RemoveUserLike',
                                    data: { userId: userId, productId: productId },
                                    dataType: 'json',
                                    success: function (response) {
                                        if (response.success) {
                                            console.log('Товар успешно удален из избранного');
                                        } else {
                                            console.log('Произошла ошибка: ' + response.message);
                                        }
                                    },
                                    error: function () {
                                        console.log('Произошла ошибка при удалении товара из избранного');
                                    }
                                });
                                return;
                            } else {
                                // Записи нет, добавляем новую запись
                                $.ajax({
                                    type: 'POST',
                                    url: '/Home/AddUserLike',
                                    data: { userId: userId, productId: productId },
                                    dataType: 'json',
                                    success: function (response) {
                                        console.log('Запись успешно добавлена');
                                        // Скрываем модальное окно
                                    },
                                    error: function () {
                                        console.log('Произошла ошибка при добавлении записи');

                                    }
                                });
                            }
                        },
                        error: function () {
                            console.log('Произошла ошибка при проверке наличия записи');
                        }
                    });
                } else {
                    console.log('Айди продукта не определено');
                }
            });
        });
    </script>

   @*  <script>
        function checkUserLike(productId, button) {
            $.ajax({
                type: "POST",
                url: "/Home/CheckUserLike",
                data: { productId: productId },
                success: function (response) {
                    if (response.exists) {
                        // Если товар в избранном, добавляем красный фон кнопке
                        button.css('background-color', 'red');
                        button.css('color', 'white');
                    } else {
                        // Если товар не в избранном, убираем красный фон кнопки
                        button.css('background-color', 'transparent');
                    }
                },
                error: function (xhr, status, error) {
                    // Обработка ошибки, если не удалось выполнить запрос
                    console.error(error);
                }
            });
        }

        // При загрузке страницы выполним проверку наличия товара в избранном для каждой кнопки
        $(document).ready(function () {
            $('.fav-button1').each(function () {
                var button = $(this);
                var productId = button.data('idd');
                checkUserLike(productId, button);
            });
        });
    </script> *@
    <script>
        $(document).ready(function () {
            // Отслеживаем клик по кнопке "info-button1"
            $('.info-button1').on('click', function () {
                var productId = $(this).data('idproduct'); // Получаем айди товара из кнопки

                // Отправляем запрос на сервер для проверки наличия товара в избранном
                $.ajax({
                    type: "POST",
                    url: "/Home/CheckUserLike",
                    data: { productId: productId },
                    success: function (response) {
                        var modalButton = $('#exampleModal').find('.fav-button2');

                        // Если товар в избранном, добавляем красный фон кнопке в модальном окне
                        if (response.exists) {
                            modalButton.css('background-color', 'red');
                            modalButton.css('color', 'white');
                        } else {
                            // Если товар не в избранном, убираем красный фон кнопки в модальном окне
                            modalButton.css('background-color', 'transparent');
                        }
                    },
                    error: function (xhr, status, error) {
                        // Обработка ошибки, если запрос не удался
                        console.error(error);
                    }
                });
            });

            // После закрытия модального окна
            $('#exampleModal').on('hidden.bs.modal', function (e) {
                // Сбрасываем стили для modalButton
                var modalButton = $('#exampleModal').find('.fav-button2');
                modalButton.css('background-color', '');
                modalButton.css('color', ''); // сброс цвета
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            var productId; // Переменная для хранения айди продукта

            // Обработчик события клика для кнопки info-button1
            $('.info-button1').click(function () {
                // Получаем айди продукта из атрибута data-idd кнопки
                productId = $(this).data('idproduct');
            });

            // Обработчик события клика для кнопки senddd
            $('#senddd').click(function (event) {
                event.preventDefault(); // Предотвращаем стандартное действие кнопки (перенаправление)

                var authenticationSuccess = localStorage.getItem("AuthenticationSuccess");

                if (authenticationSuccess === null || authenticationSuccess === "0") {
                    $('#modal').show();
                    $('#exampleModal').css('display', 'none');  // Скрыть exampleModal
                    $('#modal').css('z-index', '1051');  // Устанавливаем z-index для modal выше
                    return;
                }

                // Проверяем, был ли установлен productId
                if (productId !== undefined) {
                    // productId был установлен, можем его использовать
                    // Проверяем наличие записи в таблице UserLike
                    $.ajax({
                        type: 'POST',
                        url: '/Home/CheckUserBasket',
                        data: { productId: productId },
                        dataType: 'json',
                        success: function (data) {
                            // Получаем userId из ответа
                            var userId = data.userId;

                            if (data.exists) {
                                // Запись уже существует, не делаем ничего
                                console.log('я твой рот ебал');
                                $.ajax({
                                    type: 'POST',
                                    url: '/Home/RemoveUserBasket',
                                    data: { userId: userId, productId: productId },
                                    dataType: 'json',
                                    success: function (response) {
                                        if (response.success) {
                                            console.log('Товар успешно удален из избранного');
                                        } else {
                                            console.log('Произошла ошибка: ' + response.message);
                                        }
                                    },
                                    error: function () {
                                        console.log('Произошла ошибка при удалении товара из избранного');
                                    }
                                });
                                return;
                            } else {
                                // Записи нет, добавляем новую запись
                                $.ajax({
                                    type: 'POST',
                                    url: '/Home/AddUserBasket',
                                    data: { userId: userId, productId: productId },
                                    dataType: 'json',
                                    success: function (response) {
                                        console.log('Запись успешно добавлена');
                                        // Скрываем модальное окно
                                    },
                                    error: function () {
                                        console.log('Произошла ошибка при добавлении записи');

                                    }
                                });
                            }
                        },
                        error: function () {
                            console.log('Произошла ошибка при проверке наличия записи');
                        }
                    });
                } else {
                    console.log('Айди продукта не определено');
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.send').click(function () {
                // Получаем айди продукта из атрибута data-idd кнопки
                var productId = $(this).data('idd');
                var authenticationSuccess = localStorage.getItem("AuthenticationSuccess");

                if (authenticationSuccess === null || authenticationSuccess === "0") {
                    $('#modal').show();
                    return;
                }
                // Проверяем наличие записи в таблице UserLike
                $.ajax({
                    type: 'POST',
                    url: '/Home/CheckUserBasket',
                    data: { productId: productId },
                    dataType: 'json',
                    success: function (data) {
                        // Получаем userId из ответа
                        var userId = data.userId;

                        if (data.exists) {
                            console.log('я твой рот ебал');
                        } else {
                            // Записи нет, добавляем новую запись
                            $.ajax({
                                type: 'POST',
                                url: '/Home/AddUserBasket',
                                data: { userId: userId, productId: productId },
                                dataType: 'json',
                                success: function (response) {
                                    console.log('Запись успешно добавлена');
                                    console.log('ID пользователя:', userId);
                                    console.log('ID товара:', productId);
                                },
                                error: function () {
                                    console.log('Произошла ошибка при добавлении записи');
                                }
                            });
                        }
                    },
                    error: function () {
                        console.log('Произошла ошибка при проверке наличия записи');
                    }
                });
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tabs = document.querySelectorAll('#myTabsuser [data-tab]');
            const tabContents = document.querySelectorAll('#tab-information, #tab-password, #tab-history');

            tabs.forEach(function (tab, index) {
                tab.addEventListener('click', function () {
                    tabs.forEach(function (t) {
                        t.classList.remove('active');
                    });

                    tabContents.forEach(function (content) {
                        content.style.display = 'none';
                    });

                    this.classList.add('active');
                    const tabId = this.getAttribute('data-tab');
                    const tabContent = document.getElementById(tabId);
                    tabContent.style.display = 'block';
                });
            });

            // Активировать первую вкладку
            tabs[0].click();
        });
    </script>
</body>